#include<stdio.h>
#include<time.h>
#include <stdlib.h> 
void loop(char c[3][3]);
void intro1(char C[3][3]);
void tablero(char C[3][3]);
void introYo(char C[3][3]);
void intart(char C[3][3]);
int Ganador(char C[3][3]);
//Refresca la pantalla
int main(){
	
	char C[3][3];
	
	loop(C);
	
	system("pause");
	return 0;
}
//Prueba que se completo el tablero
void loop(char C[3][3]){
	int i;
	int j;
	i = 0;
	
	intro1(C);
	
	//Turnos de la maquina y del jugador
	do{	
		tablero(C);
		if(i % 2 == 0){
			introYo(C);
		}
		else{
			intart(C);	
		}
		
		i++;
		j = Ganador(C);
//Aqui se demuestra que se ha ganado o perdido y 
//se imprime el resultado
		
	}while(i <= 9 && j == 2 );
		tablero(C);
	
	if(j == 0){
		printf("Ganaste\n\n");
	}
	else if(j == 1){
		printf("Perdiste\n\n");
	}
	else{
		printf("Empate\n\n");
	}
	
	
}

void intro1(char C[3][3]){
	int i, j;
	char aux;
	aux = '1';
	
	for(i = 0; i <  3; i++){
		for(j = 0; j < 3; j++){
			C [i][j] = aux++; 
		}
	}
}

void introYo(char C[3][3]){
	int i,j,k;
	char aux;
	
	//Verifica si el usuario coloco en una posicion valida
	do{
		do{
			printf("Coloca una posicion: ");
			fflush(stdin);
			scanf("%c",&aux);
		}while(aux < '1' || aux > '9');
		
		k = 0;
		
		switch (aux){
			case '1': {
				i = 0;
				j = 0;
				if (C[i][j] == 'X' || C[i][j] == 'O'){
					k = 1;
					printf("La casilla esta ocupada!, intentalo con otro numero!\n\n");
				}
				break;
		}
			case '2': {
				i = 0;
				j = 1;
				if (C[i][j] == 'X' || C[i][j] == 'O'){
					k = 1;
					printf("La casilla esta ocupada!, intentalo con otro numero!\n\n");
				}
				break;
		}
			case '3': {
					i = 0;
					j = 2;
					if (C[i][j] == 'X' || C[i][j] == 'O'){
					k = 1;
					printf("La casilla esta ocupada!, intentalo con otro numero!\n\n");
				}
				break;
		}
			case '4': {
				i = 1;
				j = 0;
				if (C[i][j] == 'X' || C[i][j] == 'O'){
					k = 1;
					printf("La casilla esta ocupada!, intentalo con otro numero!\n\n");
				}
				break;
		}
		case '5': {
				i = 1;
				j = 1;
				if (C[i][j] == 'X' || C[i][j] == 'O'){
					k = 1;
					printf("La casilla esta ocupada!, intentalo con otro numero!\n\n");
				}
				break;
		}
			case '6': {
				i = 1;
				j = 2;
				if (C[i][j] == 'X' || C[i][j] == 'O'){
					k = 1;
					printf("La casilla esta ocupada!, intentalo con otro numero!\n\n");
				}
				break;
		}
			case '7': {
				i = 2;
				j = 0;
				if (C[i][j] == 'X' || C[i][j] == 'O'){
					k = 1;
					printf("La casilla esta ocupada!, intentalo con otro numero!\n\n");
				}
				break;
		}
			case '8': {
				i = 2;
				j = 1;
				if (C[i][j] == 'X' || C[i][j] == 'O'){
					k = 1;
					printf("La casilla esta ocupada!, intentalo con otro numero!\n\n");
				}
				break;
		}
			case '9': {
				i = 2;
				j = 2;
				if (C[i][j] == 'X' || C[i][j] == 'O'){
					k = 1;
					printf("La casilla esta ocupada!, intentalo con otro numero!\n\n");
				}
				break;
		}
		
	}	
	
	}while(k == 1);
		
	C[i][j] = 'X';
	
	
}
//La maquina escoge un numero aleatorio 

void intart(char C[3][3]){
	int i,j,k;
	
	srand(time(NULL));
	do{
		i = rand ()% 3 ;
		j = rand ()% 3 ;
		k = 0;
		
		if(C[i][j] == 'X'|| C[i][j] == 'O'){
			k = 1;
		}
	}while(k == 1);
	C[i][j] = 'O';
}

//Aqui se dibuja el tablero
void tablero(char C[3][3]){
	int i,j;
	
	for(i = 0; i < 3; i++){
		for(j = 0; j < 3; j++){
			if(j < 2){
				printf(" %c |",C[i][j]);
			}
			else{
				printf("%c ",C[i][j]);
			}
		}
		if(i < 2){
			printf("\n-----------\n");
		}
	}
	printf("\n\n");
}
/*Aqui se muestra las condiciones en la que el programa
demuestra que se ha ganado o perdido*/
int Ganador(char C[3][3]){
	
	if(C[0][0] == 'X' || C[0][0] == 'O'){
		if(C[0][0] == C[0][1] && C[0][0] == C[0][2]){
			if(C[0][0] == 'X'){
				return 0; //Ganaste 
			}
			else{
				return 1; //Perdiste 
			}
		}
		if(C[0][0] == C[1][0] && C[0][0] == C[2][0]){
			if(C[0][0] == 'X'){
				return 0; //Ganaste 
			}
			else{
				return 1; //Perdiste 
			}
	}
	}
	
	if(C[1][1] == 'X' || C[1][1] == 'O'){
		if(C[1][1] == C[0][0] && C[1][1] == C[2][2]){
			if(C[1][1] == 'X'){
				return 0; //Ganaste 
			}
			else{
				return 1; //Perdiste 
			
			}
		}
		if(C[1][1] == C[1][0] && C[1][1] == C[1][2]){
			if(C[1][1] == 'X'){
				return 0; //Ganaste 
			}
			else{
				return 1; //Perdiste 
			
			}
		}
		if(C[1][1] == C[2][0] && C[1][1] == C[0][2]){
			if(C[1][1] == 'X'){
				return 0; //Ganaste 
			}
			else{
				return 1; //Perdiste 
			
			}
		}
		if(C[1][1] == C[0][1] && C[1][1] == C[2][1]){
			if(C[1][1] == 'X'){
				return 0; //Ganaste 
			}
			else{
				return 1; //Perdiste 
			
			}
		}
	}
	if(C[2][2] == 'X' || C[2][2] == 'O'){
		if(C[2][2] == C[2][0] && C[2][2] == C[2][1]){
			if(C[2][2] == 'X'){
				return 0; //Ganaste 
			}
			else{
				return 1; //Perdiste 
			
			}
		}
		if(C[2][2] == C[0][2] && C[2][2] == C[1][2]){
			if(C[2][2] == 'X'){
				return 0; //Ganaste 
			}
			else{
				return 1; //Perdiste 
			
			}
		}
		
	}
	return 2;
}
 

